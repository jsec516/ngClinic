{"version":3,"sources":["webpack:///main.872e8ba13fe54bc54c41.bundle.js","webpack:///./~/js-cookie/src/js.cookie.js","webpack:///./~/ts-helper/decorate.js","webpack:///./~/ts-helper/metadata.js","webpack:///./src/app/app.html","webpack:///./src/app/app.ts","webpack:///./src/app/components/appt/history.html","webpack:///./src/app/components/appt/history.ts","webpack:///./src/app/components/appt/new.html","webpack:///./src/app/components/appt/new.ts","webpack:///./src/app/components/forgot/forgot.html","webpack:///./src/app/components/forgot/forgot.ts","webpack:///./src/app/components/loggedout/loggedout.html","webpack:///./src/app/components/loggedout/loggedout.ts","webpack:///./src/app/components/login/login.html","webpack:///./src/app/components/login/login.ts","webpack:///./src/app/components/navbar/navbar.html","webpack:///./src/app/components/navbar/navbar.ts","webpack:///./src/app/components/profile/edit.html","webpack:///./src/app/components/profile/edit.ts","webpack:///./src/app/components/register/register.html","webpack:///./src/app/components/register/register.ts","webpack:///./src/app/components/wait/new.ts","webpack:///./src/app/directives/radio_value_accessor.ts","webpack:///./src/app/forms/login.form.ts","webpack:///./src/app/services/app.service.ts","webpack:///./src/app/services/appointment.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/cookie.service.ts","webpack:///./src/app/services/history.service.ts","webpack:///./src/app/services/profile.service.ts","webpack:///./src/app/services/window.service.ts","webpack:///./src/app/validators/email.validator.ts","webpack:///./src/app/validators/password.validator.ts","webpack:///./src/main.ts"],"names":["webpackJsonp",412,"module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","call","undefined","extend","i","result","arguments","length","attributes","key","init","converter","api","value","path","defaults","expires","Date","setMilliseconds","getMilliseconds","JSON","stringify","test","e","write","encodeURIComponent","String","replace","decodeURIComponent","escape","document","cookie","toUTCString","domain","secure","join","cookies","split","rdecode","parts","name","slice","charAt","read","this","json","parse","get","set","getJSON","apply","remove","withConverter",13,"Reflect","decorate","decorators","target","desc","d","c","r","Object","getOwnPropertyDescriptor","defineProperty",14,"metadata","k","v",414,622,"__decorate","__metadata","core_1","router_1","register_1","login_1","forgot_1","new_1","new_2","history_1","edit_1","loggedout_1","app_service_1","auth_service_1","cookie_service_1","navbar_1","App","App.constructor","AppService",415,623,"gsap","$","history_service_1","ApptHistory","ApptHistory.constructor","ApptHistory.ngOnInit","ApptHistory.routerOnActivate","ApptHistory.routerOnDeactivate","Router","AuthService","HistoryService",416,624,"common_1","appointment_service_1","NewAppt","NewAppt.constructor","NewAppt.ngOnInit","NewAppt.routerOnActivate","NewAppt.routerOnDeactivate","NewAppt.changePractitioners","NewAppt.changeSlots","NewAppt.doAppointment","AppointmentService","ElementRef","FormBuilder",417,625,"Forgot","Forgot.constructor","Forgot.ngOnInit","Forgot.routerOnActivate","Forgot.routerOnDeactivate",418,626,"Loggedout","Loggedout.constructor",419,627,"login_form_1","Login","Login.constructor","Login.hasError","enumerable","configurable","Login.error","Login.onSubmit","Login.diagnostic","Login.ngOnInit","Login.routerOnActivate","Login.routerOnDeactivate",420,628,"NavBar","NavBar.constructor","NavBar.authenticated","NavBar.doLogout",421,629,"radio_value_accessor_1","profile_service_1","EditProfile","EditProfile.constructor","EditProfile.ngOnInit","EditProfile.routerOnActivate","EditProfile.routerOnDeactivate","ProfileService",422,630,"email_validator_ts_1","password_validator_ts_1","Register","Register.constructor","Register.formStatus","Register.doRegister","Register.ngOnInit","Register.routerOnActivate","Register.routerOnDeactivate",423,631,"NewWait","NewWait.constructor",632,"lang_1","RADIO_VALUE_ACCESSOR","CONST_EXPR","Provider","NG_VALUE_ACCESSOR","useExisting","forwardRef","RadioControlValueAccessor","multi","RadioControlValueAccessor.constructor","RadioControlValueAccessor.writeValue","RadioControlValueAccessor.registerOnChange","RadioControlValueAccessor.registerOnTouched","Renderer",633,"LoginForm","LoginForm.constructor",634,"http_1","AppService.constructor","Http",635,"AppointmentService.constructor","AppointmentService.fetchPractitioners","AppointmentService.fetchSlots","AppointmentService.doAppointment",20,"AuthService.constructor","AuthService.doLogin","AuthService.doRegister","AuthService.clearCookie","AuthService.doLogout","AuthService.isAuthenticated","AuthService.getToken","CookieService",339,"Cookies","CookieService.constructor","CookieService.getCookie","CookieService.getAllCookies","CookieService.setCookie","CookieService.removeCookie",636,"HistoryService.constructor","HistoryService.load",637,"ProfileService.constructor","ProfileService.fetch",638,"WindowService","WindowService.createWindow",639,"EmailValidator","EmailValidator.validEmail","EmailValidator.emailAlreadyExist",640,"PasswordValidator","PasswordValidator.matchPassword",0,"browser_1","app_1","window_service_1","addEventListener","main"],"mappings":"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","file":"main.872e8ba13fe54bc54c41.bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 412:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * JavaScript Cookie v2.1.0\n\t * https://github.com/js-cookie/js-cookie\n\t *\n\t * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n\t * Released under the MIT license\n\t */\n\t(function (factory) {\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (typeof exports === 'object') {\n\t\t\tmodule.exports = factory();\n\t\t} else {\n\t\t\tvar _OldCookies = window.Cookies;\n\t\t\tvar api = window.Cookies = factory();\n\t\t\tapi.noConflict = function () {\n\t\t\t\twindow.Cookies = _OldCookies;\n\t\t\t\treturn api;\n\t\t\t};\n\t\t}\n\t}(function () {\n\t\tfunction extend () {\n\t\t\tvar i = 0;\n\t\t\tvar result = {};\n\t\t\tfor (; i < arguments.length; i++) {\n\t\t\t\tvar attributes = arguments[ i ];\n\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\tresult[key] = attributes[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction init (converter) {\n\t\t\tfunction api (key, value, attributes) {\n\t\t\t\tvar result;\n\t\n\t\t\t\t// Write\n\t\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tattributes = extend({\n\t\t\t\t\t\tpath: '/'\n\t\t\t\t\t}, api.defaults, attributes);\n\t\n\t\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\n\t\t\t\t\tif (!converter.write) {\n\t\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\t\n\t\t\t\t\treturn (document.cookie = [\n\t\t\t\t\t\tkey, '=', value,\n\t\t\t\t\t\tattributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\n\t\t\t\t\t\tattributes.path    && '; path=' + attributes.path,\n\t\t\t\t\t\tattributes.domain  && '; domain=' + attributes.domain,\n\t\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t\t].join(''));\n\t\t\t\t}\n\t\n\t\t\t\t// Read\n\t\n\t\t\t\tif (!key) {\n\t\t\t\t\tresult = {};\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t\t// calling \"get()\"\n\t\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tvar cookie = parts.slice(1).join('=');\n\t\n\t\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\t\n\t\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!key) {\n\t\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\n\t\t\tapi.get = api.set = api;\n\t\t\tapi.getJSON = function () {\n\t\t\t\treturn api.apply({\n\t\t\t\t\tjson: true\n\t\t\t\t}, [].slice.call(arguments));\n\t\t\t};\n\t\t\tapi.defaults = {};\n\t\n\t\t\tapi.remove = function (key, attributes) {\n\t\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\t\texpires: -1\n\t\t\t\t}));\n\t\t\t};\n\t\n\t\t\tapi.withConverter = init;\n\t\n\t\t\treturn api;\n\t\t}\n\t\n\t\treturn init(function () {});\n\t}));\n\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Reflect) {module.exports = (this && this.Reflect && Reflect.decorate) || (this.__decorate) || function (decorators, target, key, desc) {\n\t  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t  return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n\n/***/ 14:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Reflect) {module.exports = (this && this.Reflect && Reflect.metadata) || (this.__metadata) || function (k, v) {\n\t  if (typeof Reflect === 'object' && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n\n/***/ 414:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!-- MAIN CONTENT AREA -->\\n<div class=\\\"container-fluid main-wrapper\\\">\\n    <navbar [nav]=\\\"appService.nav\\\"></navbar>\\n    <div class=\\\"row\\\">\\n        <div id=\\\"glab-main-container\\\" class=\\\"col-lg-12 main-container\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n    <div class=\\\"row footer\\\">\\n        <div class=\\\"col-lg-12 text-center\\\">\\n            Design & Developed by <a href=\\\"http://jahid.me\\\" >jahidul Islam</a>\\n        </div>\\n    </div>\\n</div>\\n<!-- END OF MAIN CONTENT -->\"\n\n/***/ },\n\n/***/ 622:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar register_1 = __webpack_require__(630);\n\tvar login_1 = __webpack_require__(627);\n\tvar forgot_1 = __webpack_require__(625);\n\tvar new_1 = __webpack_require__(624);\n\tvar new_2 = __webpack_require__(631);\n\tvar history_1 = __webpack_require__(623);\n\tvar edit_1 = __webpack_require__(629);\n\tvar loggedout_1 = __webpack_require__(626);\n\tvar app_service_1 = __webpack_require__(634);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar cookie_service_1 = __webpack_require__(339);\n\tvar navbar_1 = __webpack_require__(628);\n\tvar App = (function () {\n\t    function App(appService) {\n\t        this.appService = appService;\n\t    }\n\t    App = __decorate([\n\t        core_1.Component({\n\t            selector: 'app',\n\t            directives: [navbar_1.NavBar, router_1.RouterOutlet, router_1.ROUTER_DIRECTIVES],\n\t            viewProviders: [auth_service_1.AuthService, app_service_1.AppService, cookie_service_1.CookieService],\n\t            template: __webpack_require__(414)\n\t        }),\n\t        router_1.RouteConfig([\n\t            { path: '/', name: 'Default', component: login_1.Login },\n\t            { path: '/login', name: 'Login', component: login_1.Login, useAsDefault: true },\n\t            { path: '/register', name: 'Register', component: register_1.Register },\n\t            { path: '/forgot', name: 'Forgot', component: forgot_1.Forgot },\n\t            { path: '/dashboard', name: 'Dashboard', component: new_1.NewAppt },\n\t            { path: '/appt', name: 'NewAppt', component: new_1.NewAppt },\n\t            { path: '/wait', name: 'NewWait', component: new_2.NewWait },\n\t            { path: '/history/app', name: 'ApptHistory', component: history_1.ApptHistory },\n\t            { path: '/edit-profile', name: 'EditProfile', component: edit_1.EditProfile },\n\t            { path: '/loggedout', name: 'Loggedout', component: loggedout_1.Loggedout }\n\t        ]), \n\t        __metadata('design:paramtypes', [app_service_1.AppService])\n\t    ], App);\n\t    return App;\n\t})();\n\texports.App = App;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 415:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-app-history\\\" class=\\\"glab-app-history\\\" data-title=\\\"Appointment History\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <th>Service</th>\\n                <th>Practitioner</th>\\n                <th>Date</th>\\n                <th>Time</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"#appt of _historyService.appointments\\\" >\\n                <td>\\n                    {{appt.service}}\\n                </td>\\n                <td>\\n                    {{appt.practitioner}}\\n                </td>\\n                <td>\\n                    {{appt.date}}\\n                </td>\\n                <td>\\n                    {{appt.time}}\\n                </td>\\n                <td>\\n                    <a *ngIf=\\\"appt.status==='upcoming'\\\" class=\\\"cancel-appt-btn\\\" href=\\\"#\\\">Cancel</a>\\n                    <span *ngIf=\\\"appt.status==='expired'\\\" >N/A</span>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\"\n\n/***/ },\n\n/***/ 623:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(gsap, $, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar history_service_1 = __webpack_require__(636);\n\tvar ApptHistory = (function () {\n\t    function ApptHistory(_router, _service, _historyService) {\n\t        this._router = _router;\n\t        this._service = _service;\n\t        this._historyService = _historyService;\n\t    }\n\t    ApptHistory.prototype.ngOnInit = function () {\n\t        if (!this._service.isAuthenticated()) {\n\t            this._router.navigate(['Default']);\n\t        }\n\t        this._historyService.load();\n\t    };\n\t    ApptHistory.prototype.routerOnActivate = function (next, prev) {\n\t        console.log(\"history Page - initialized\");\n\t        gsap.fromTo($(\".glab-app-history\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t    };\n\t    ApptHistory.prototype.routerOnDeactivate = function (next, prev) {\n\t        console.log(\"history Page - destroyed\");\n\t        gsap.fromTo($(\".glab-app-history\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t    };\n\t    ApptHistory = __decorate([\n\t        core_1.Component({\n\t            selector: 'appt-history',\n\t            template: __webpack_require__(415),\n\t            directives: [router_1.ROUTER_DIRECTIVES],\n\t            providers: [history_service_1.HistoryService]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService, history_service_1.HistoryService])\n\t    ], ApptHistory);\n\t    return ApptHistory;\n\t})();\n\texports.ApptHistory = ApptHistory;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(31), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 416:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-new-appt\\\" data-title=\\\"Make an appointment\\\">\\n    <div  [hidden]=\\\"!_apptService.successMsg\\\" class=\\\"alert alert-success\\\"  role=\\\"alert\\\">{{_apptService.successMsg}}</div>\\n    <div  [hidden]=\\\"!_apptService.errorMsg\\\" class=\\\"alert alert-danger\\\"  role=\\\"alert\\\">{{_apptService.errorMsg}}</div>\\n    \\n    <form [hidden]=\\\"_apptService.successMsg\\\" [ngFormModel]=\\\"apptForm\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"doAppointment()\\\" role=\\\"form\\\" method=\\\"post\\\" action=\\\"submitApp\\\" data-update=\\\"#glab-main-container\\\" class=\\\"glab-new-form glab-form\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"service\\\">Service</label>\\n            <select ngControl=\\\"service\\\" (change)=\\\"changePractitioners($event)\\\" required id=\\\"service\\\" class=\\\"form-control\\\" name=\\\"services\\\" placeholder=\\\"Select Service\\\">\\n                <option value=\\\"\\\" disabled selected>Select Service</option>\\n                <option *ngFor=\\\"#s of _apptService.services\\\" [value]=\\\"s.id\\\">{{ s.name }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"practitioner\\\">Practitioner</label>\\n            <select ngControl=\\\"practitioner\\\" id=\\\"practitioner\\\" required  class=\\\"form-control\\\" name=\\\"practitioners\\\">\\n                <option value=\\\"\\\" disabled selected>Select Pracitioner</option>\\n                <option *ngFor=\\\"#p of _apptService.practitioners\\\" [value]=\\\"p._id\\\">{{ p.firstName + ' ' + p.lastName }}</option>\\n            </select>\\n            <span *ngIf=\\\"_apptService.loading==='practitioners'\\\">loading....</span>\\n        </div>\\n\\n        <div class=\\\"form-group app-date-container\\\">\\n            <label for=\\\"app_date\\\">Appointment Date:</label>\\n            <input #date ngControl=\\\"date\\\" required   placeholder=\\\"Select Date\\\" type=\\\"text\\\" class=\\\"form-control datepicker\\\" name=\\\"app_date\\\" id=\\\"app_date\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"app_time\\\">Time:</label>\\n            <select ngControl=\\\"slot\\\" required  id=\\\"app_time\\\" class=\\\"form-control\\\" name=\\\"app_time\\\">\\n                <option value=\\\"\\\" disabled selected>Select Slot</option>\\n                <option *ngFor=\\\"#slot of _apptService.slots\\\" [value]=\\\"slot\\\">{{ slot }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"app_reminder\\\">Reminder Type:</label>\\n            <select ngControl=\\\"reminder\\\" required id=\\\"app_reminder\\\" class=\\\"form-control\\\" name=\\\"app_reminder\\\">\\n                <option value=\\\"\\\" disabled selected>Select Reminder</option>\\n                <option *ngFor=\\\"#reminder of _apptService.reminders\\\" [value]=\\\"reminder\\\">{{ reminder }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"pt_comments\\\">Add Comment:</label>\\n            <textarea ngControl=\\\"comment\\\" #comment class=\\\"form-control\\\" id=\\\"pt_comments\\\" name=\\\"pt_comments\\\"></textarea>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <!--<div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"wait-btn\\\">or Request an <strong>waiting appointment</strong></a>\\n            <a href=\\\"#\\\" class=\\\"new-btn\\\">or Create an <strong> appointment</strong></a>\\n        </div>-->\\n    </form>\\n</div>\"\n\n/***/ },\n\n/***/ 624:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function($, gsap, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar common_1 = __webpack_require__(33);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar appointment_service_1 = __webpack_require__(635);\n\tvar NewAppt = (function () {\n\t    function NewAppt(_router, _service, _apptService, elementRef, fb) {\n\t        var _this = this;\n\t        this._router = _router;\n\t        this._service = _service;\n\t        this._apptService = _apptService;\n\t        this.fb = fb;\n\t        this.elementRef = elementRef;\n\t        this.apptForm = fb.group({\n\t            service: new common_1.Control('', common_1.Validators.required),\n\t            \"practitioner\": new common_1.Control('', common_1.Validators.required),\n\t            \"date\": new common_1.Control('', common_1.Validators.required),\n\t            \"slot\": ['', common_1.Validators.required],\n\t            \"reminder\": ['', common_1.Validators.required],\n\t            \"comment\": []\n\t        });\n\t        this.apptForm.controls['date'].valueChanges.subscribe(function (value) {\n\t            _this.changeSlots(value);\n\t        });\n\t    }\n\t    NewAppt.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        if (!this._service.isAuthenticated()) {\n\t            this._router.navigate(['Default']);\n\t        }\n\t        $(this.elementRef.nativeElement).find('.datepicker').datepicker({ autoclose: true, immediateUpdates: true })\n\t            .on('changeDate', function (e) {\n\t            console.log(\"date changed\");\n\t            _this.apptForm.controls['date'].updateValue(e.format('mm/dd/yyyy'));\n\t        });\n\t    };\n\t    NewAppt.prototype.routerOnActivate = function (next, prev) {\n\t        console.log(\"NewAppt Page - initialized\");\n\t        gsap.fromTo($(\".glab-new-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t    };\n\t    NewAppt.prototype.routerOnDeactivate = function (next, prev) {\n\t        console.log(\"NewAppt Page - destroyed\");\n\t        gsap.fromTo($(\".glab-new-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t    };\n\t    NewAppt.prototype.changePractitioners = function ($event) {\n\t        this._apptService.fetchPractitioners($event.target.value);\n\t    };\n\t    NewAppt.prototype.changeSlots = function (value) {\n\t        this._apptService.fetchSlots(value);\n\t    };\n\t    NewAppt.prototype.doAppointment = function () {\n\t        this._apptService.doAppointment(this.apptForm.value);\n\t    };\n\t    NewAppt = __decorate([\n\t        core_1.Component({\n\t            selector: 'new-appt',\n\t            template: __webpack_require__(416),\n\t            directives: [router_1.ROUTER_DIRECTIVES, common_1.FORM_DIRECTIVES],\n\t            providers: [appointment_service_1.AppointmentService]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService, appointment_service_1.AppointmentService, core_1.ElementRef, common_1.FormBuilder])\n\t    ], NewAppt);\n\t    return NewAppt;\n\t})();\n\texports.NewAppt = NewAppt;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(31), __webpack_require__(41), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 417:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-forgot\\\" data-title=\\\"Enter Email Address To Get Password\\\">\\n    <form role=\\\"form\\\" data-update=\\\"#forgotSuccess\\\" class=\\\"glab-forgot-form glab-form\\\" action=\\\"forgotPassword.php\\\" method=\\\"post\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" required id=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"login-btn\\\" [routerLink]=\\\"['Login']\\\">Back To <strong>Login</strong>?</a>\\n        </div>\\n\\n    </form>\\n</div>\"\n\n/***/ },\n\n/***/ 625:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(gsap, $, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar Forgot = (function () {\n\t    function Forgot(_router, authService) {\n\t        this._router = _router;\n\t        this.authService = authService;\n\t    }\n\t    Forgot.prototype.ngOnInit = function () {\n\t        if (this.authService.isAuthenticated()) {\n\t            return this._router.navigate(['Dashboard']);\n\t        }\n\t    };\n\t    Forgot.prototype.routerOnActivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Register Page - initialized\");\n\t            gsap.fromTo($(\".glab-forgot-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t        }\n\t    };\n\t    Forgot.prototype.routerOnDeactivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Register Page - destroyed\");\n\t            gsap.fromTo($(\".glab-forgot-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t        }\n\t    };\n\t    Forgot = __decorate([\n\t        core_1.Component({\n\t            selector: 'forgot',\n\t            template: __webpack_require__(417),\n\t            directives: [router_1.ROUTER_DIRECTIVES]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService])\n\t    ], Forgot);\n\t    return Forgot;\n\t})();\n\texports.Forgot = Forgot;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(31), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 418:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"\"\n\n/***/ },\n\n/***/ 626:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar Loggedout = (function () {\n\t    function Loggedout(_router, _service) {\n\t        this._router = _router;\n\t        this._service = _service;\n\t    }\n\t    Loggedout = __decorate([\n\t        core_1.Component({\n\t            selector: 'logged-out',\n\t            template: __webpack_require__(418),\n\t            directives: [router_1.ROUTER_DIRECTIVES],\n\t            providers: [auth_service_1.AuthService]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService])\n\t    ], Loggedout);\n\t    return Loggedout;\n\t})();\n\texports.Loggedout = Loggedout;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 419:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-login\\\" style=\\\"padding-top: 20px;\\\" data-title=\\\"Please Login First To Book Appointment\\\">\\n    <div id=\\\"\\\" *ngIf=\\\"hasError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{ error }}</div>\\n    <form role=\\\"form\\\" action=\\\"login\\\" (ngSubmit)=\\\"onSubmit()\\\"  #loginForm=\\\"ngForm\\\" method=\\\"post\\\" class=\\\"glab-login-form glab-form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" required [(ngModel)]=\\\"model.email\\\" ngControl=\\\"email\\\" #spy\\n            #email=\\\"ngForm\\\" placeholder=\\\"Enter email\\\">\\n            <div [hidden]=\\\"email.untouched || email.valid\\\" class=\\\"alert alert-danger\\\">\\n                Email is required\\n            </div>\\n            <!--TODO: remove this: {{model.email}} TODO: remove this: {{spy.className}}-->\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" ngControl=\\\"password\\\"\\n            placeholder=\\\"Password\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"forgot-btn\\\" [routerLink]=\\\"['Forgot']\\\">Forgot <strong>Password</strong>?</a>\\n            <br/>\\n            <a href=\\\"#\\\" class=\\\"register-btn\\\" [routerLink]=\\\"['Register']\\\">Create <strong>Account</strong>?</a>\\n        </div>\\n    </form>\\n</div>\"\n\n/***/ },\n\n/***/ 627:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(gsap, $, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar common_1 = __webpack_require__(33);\n\tvar login_form_1 = __webpack_require__(633);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar Login = (function () {\n\t    function Login(_router, authService) {\n\t        this._router = _router;\n\t        this.authService = authService;\n\t        this.user = \"\";\n\t        this.password = \"\";\n\t        this.authService.loginError = '';\n\t        this.model = new login_form_1.LoginForm('', '');\n\t    }\n\t    Object.defineProperty(Login.prototype, \"hasError\", {\n\t        get: function () {\n\t            return this.authService.loginError;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(Login.prototype, \"error\", {\n\t        get: function () {\n\t            return this.authService.loginError;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Login.prototype.onSubmit = function () {\n\t        console.log('calling auth service');\n\t        this.authService.doLogin(this.model.email, this.model.password);\n\t    };\n\t    Object.defineProperty(Login.prototype, \"diagnostic\", {\n\t        get: function () { return JSON.stringify(this.model); },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Login.prototype.ngOnInit = function () {\n\t        if (this.authService.isAuthenticated()) {\n\t            return this._router.navigate(['Dashboard']);\n\t        }\n\t    };\n\t    Login.prototype.routerOnActivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Login Page - initialized\");\n\t            gsap.fromTo($(\".glab-login-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t        }\n\t    };\n\t    Login.prototype.routerOnDeactivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Login Page - destroyed\");\n\t            gsap.fromTo($(\".glab-login-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t        }\n\t    };\n\t    Login = __decorate([\n\t        core_1.Component({\n\t            selector: 'login',\n\t            template: __webpack_require__(419),\n\t            directives: [router_1.ROUTER_DIRECTIVES, common_1.FORM_DIRECTIVES],\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService])\n\t    ], Login);\n\t    return Login;\n\t})();\n\texports.Login = Login;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(31), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 420:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 banner-container\\\">\\n        <a href=\\\"#\\\" [routerLink]=\\\"['Default']\\\" class=\\\"glab-home\\\"><span class=\\\"glyphicon glyphicon-home glab-home-icon\\\"></span></a>\\n        <h1 id=\\\"banner-title\\\">{{ nav.title }}</h1>\\n        <div id=\\\"nav-menu\\\">\\n            <a *ngIf=\\\"!authenticated\\\" href=\\\"#\\\" class=\\\"btn btn-default glab-btn register-btn\\\" [routerLink]=\\\"['Register']\\\">Register</a>\\n            <div *ngIf=\\\"authenticated\\\" class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default glab-btn dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                    Actions\\n                    <span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul class=\\\"dropdown-menu actions-menu\\\" role=\\\"menu\\\">\\n                    <li><a [routerLink]=\\\"['NewAppt']\\\" href=\\\"#\\\">New Appt.</a></li>\\n                    <li><a [routerLink]=\\\"['ApptHistory']\\\" href=\\\"#glab-app-history\\\">Appt History</a></li>\\n                    <!--<li><a [routerLink]=\\\"['WaitHistory']\\\" href=\\\"#glab-wait-history\\\">Waiting History</a></li> -->\\n                    <li><a [routerLink]=\\\"['EditProfile']\\\" href=\\\"#glab-edit-profile\\\">Edit Profile</a></li>\\n                    <li><a (click)=\\\"doLogout()\\\" href=\\\"#\\\">Logout</a></li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n/***/ },\n\n/***/ 628:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar NavBar = (function () {\n\t    function NavBar(router, authService) {\n\t        this.router = router;\n\t        this.authService = authService;\n\t    }\n\t    Object.defineProperty(NavBar.prototype, \"authenticated\", {\n\t        get: function () {\n\t            return this.authService.isAuthenticated();\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    NavBar.prototype.doLogout = function () {\n\t        this.authService.doLogout();\n\t    };\n\t    NavBar = __decorate([\n\t        core_1.Component({\n\t            selector: 'navbar',\n\t            template: __webpack_require__(420),\n\t            inputs: ['nav'],\n\t            directives: [router_1.ROUTER_DIRECTIVES]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService])\n\t    ], NavBar);\n\t    return NavBar;\n\t})();\n\texports.NavBar = NavBar;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 421:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-edit-profile\\\" data-title=\\\"Please Login First To Book Appointment\\\">\\n    <form role=\\\"form\\\" [ngFormModel]=\\\"profileForm\\\" #f=\\\"ngForm\\\" method=\\\"post\\\" action=\\\"updateProfile\\\" data-update=\\\"#glab-edit-status\\\" class=\\\"glab-edit-profile-form glab-form\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editFirstName\\\">First Name</label>\\n            <input type=\\\"text\\\" required id=\\\"editFirstName\\\" class=\\\"form-control\\\" ngControl=\\\"firstName\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editLastName\\\">Last Name</label>\\n            <input type=\\\"text\\\" required id=\\\"editLastName\\\" class=\\\"form-control\\\" ngControl=\\\"lastName\\\" value=\\\"\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editEmail\\\">E-mail</label>\\n            <input type=\\\"text\\\" disabled=\\\"disabled\\\" id=\\\"editEmail\\\" class=\\\"form-control\\\" ngControl=\\\"email\\\" value=\\\"\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"pass_option\\\">Password</label>\\n            <a href=\\\"#\\\" id=\\\"pass_option\\\" name=\\\"pass_option\\\">change password?</a>\\n        </div>\\n\\n        <div class=\\\"form-group pass_options\\\">\\n            <label for=\\\"new_password\\\">New Password</label>\\n            <input type=\\\"password\\\" id=\\\"new_password\\\" class=\\\"form-control\\\" name=\\\"new_password\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group pass_options\\\">\\n            <label for=\\\"re_password\\\">Retype Password (Type your new password again)</label>\\n            <input type=\\\"password\\\" id=\\\"re_password\\\" class=\\\"form-control\\\" name=\\\"re_password\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editPhone\\\">Phone</label>\\n            <input type=\\\"text\\\" required id=\\\"editPhone\\\" class=\\\"form-control\\\" ngControl=\\\"phone\\\" value=\\\"\\\" />\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editContact\\\">Contact Me</label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact1\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"email\\\"> Email\\n            </label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact2\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"phone\\\"> Phone\\n            </label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact3\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"both\\\"> Both\\n            </label>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\" style=\\\"\\\">Submit</button>\\n    </form>\\n</div>\"\n\n/***/ },\n\n/***/ 629:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(gsap, $, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar common_1 = __webpack_require__(33);\n\tvar radio_value_accessor_1 = __webpack_require__(632);\n\tvar profile_service_1 = __webpack_require__(637);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar EditProfile = (function () {\n\t    function EditProfile(_router, _service, fb, _profileService) {\n\t        this._router = _router;\n\t        this._service = _service;\n\t        this.fb = fb;\n\t        this._profileService = _profileService;\n\t        this.profileForm = fb.group({\n\t            firstName: new common_1.Control('', common_1.Validators.required),\n\t            lastName: new common_1.Control('', common_1.Validators.required),\n\t            email: new common_1.Control('', common_1.Validators.required),\n\t            phone: ['', common_1.Validators.required],\n\t            contactMethod: ['email', common_1.Validators.required]\n\t        });\n\t    }\n\t    EditProfile.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        if (!this._service.isAuthenticated()) {\n\t            return this._router.navigate(['Default']);\n\t        }\n\t        this._profileService.fetch().subscribe(function (rep, err) {\n\t            if (err) {\n\t                console.log(\"Error : \", err);\n\t                throw err;\n\t            }\n\t            var response = rep.json();\n\t            var profile = response.message;\n\t            _this.profileForm.controls['firstName'].updateValue(profile.firstName);\n\t            _this.profileForm.controls['lastName'].updateValue(profile.lastName);\n\t            _this.profileForm.controls['email'].updateValue(profile.email);\n\t            _this.profileForm.controls['phone'].updateValue(profile.phone);\n\t            _this.profileForm.controls['contactMethod'].updateValue(profile.contactInfo);\n\t        });\n\t    };\n\t    EditProfile.prototype.routerOnActivate = function (next, prev) {\n\t        console.log(\"profile Page - initialized\");\n\t        gsap.fromTo($(\".glab-edit-profile-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t    };\n\t    EditProfile.prototype.routerOnDeactivate = function (next, prev) {\n\t        console.log(\"profile Page - destroyed\");\n\t        gsap.fromTo($(\".glab-edit-profile-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t        return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t    };\n\t    EditProfile = __decorate([\n\t        core_1.Component({\n\t            selector: 'edit-profile',\n\t            template: __webpack_require__(421),\n\t            directives: [router_1.ROUTER_DIRECTIVES, common_1.FORM_DIRECTIVES, radio_value_accessor_1.RadioControlValueAccessor],\n\t            providers: [profile_service_1.ProfileService]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService, common_1.FormBuilder, profile_service_1.ProfileService])\n\t    ], EditProfile);\n\t    return EditProfile;\n\t})();\n\texports.EditProfile = EditProfile;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(31), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 422:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=\\\"glab-register\\\" data-title=\\\"Register to be a member of anantahealth\\\">\\n    <div  [hidden]=\\\"!authService.successMsg\\\" class=\\\"alert alert-success\\\"  role=\\\"alert\\\">{{authService.successMsg}}</div>\\n    <div  [hidden]=\\\"!authService.registerError\\\" class=\\\"alert alert-danger\\\"  role=\\\"alert\\\">{{authService.registerError}}</div>\\n    \\n    <form role=\\\"form\\\" *ngIf=\\\"!authService.successMsg\\\" (ngSubmit)=\\\"doRegister()\\\" [ngFormModel]=\\\"registerForm\\\" #f=\\\"ngForm\\\" method=\\\"post\\\" data-update=\\\"#regSuccess\\\" action=\\\"submitRegister\\\" class=\\\"glab-register-form glab-form\\\">\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"fName\\\" class=\\\"col-md-8 control-label\\\">First Name</label>\\n            <input type=\\\"text\\\" ngControl=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"fName\\\" name=\\\"fName\\\" required=\\\"required\\\" placeholder=\\\"First Name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"lName\\\" class=\\\"col-md-8 control-label\\\">Last Name</label>\\n            <input type=\\\"text\\\" ngControl=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lName\\\" name=\\\"lName\\\" required=\\\"required\\\" placeholder=\\\"Last Name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"email\\\" class=\\\"col-md-8 control-label\\\">Email address</label>\\n            <input type=\\\"email\\\" ngControl=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" required=\\\"required\\\" placeholder=\\\"Email\\\">\\n            <p *ngIf=\\\"email.pending\\\">Fetching data from the server...</p>\\n            <div *ngIf=\\\"email.touched && !email.valid && !email.pending\\\">\\n                <p *ngIf=\\\"email.errors.required\\\">Email is required.</p>\\n                <p *ngIf=\\\"email.errors.validEmail\\\">Your email is not in valid format</p>\\n                <p *ngIf=\\\"email.errors.emailAlreadyExist\\\">This email is already registered</p>\\n            </div>\\n        </div>\\n\\n        <!--<div class=\\\"form-group required\\\">\\n            <label for=\\\"passwd\\\" class=\\\"col-md-8 control-label\\\">Password</label>\\n            <input type=\\\"password\\\" ngControl=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwd\\\" name=\\\"passwd\\\" required=\\\"required\\\" placeholder=\\\"Password\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"rPasswd\\\" class=\\\"col-md-8 control-label\\\">Retype Password</label>\\n            <input type=\\\"password\\\" ngControl=\\\"confirm\\\" class=\\\"form-control\\\" id=\\\"rPasswd\\\" name=\\\"rPasswd\\\" required=\\\"required\\\" placeholder=\\\"Retype Password\\\">\\n        </div>-->\\n        <!--[class.invalid]=\\\"passwordGroup.touched && !passwordGroup.valid\\\"-->\\n        <div ngControlGroup=\\\"matching_password\\\" >\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-8 control-label\\\" for=\\\"passwd\\\">Password</label>\\n                <input class=\\\"form-control\\\" required type=\\\"password\\\" ngControl=\\\"password\\\" id=\\\"passwd\\\" placeholder=\\\"Your password\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"rPasswd\\\" class=\\\"col-md-8 control-label\\\">Password Confirmation</label>\\n                <input class=\\\"form-control\\\" required type=\\\"password\\\" ngControl=\\\"confirm\\\" id=\\\"rPasswd\\\" placeholder=\\\"Password Confirmation\\\" />\\n                <div *ngIf=\\\"passwordGroup.touched && !passwordGroup.valid\\\">\\n                    <p *ngIf=\\\"passwordGroup.touched && !passwordGroup.valid\\\">Passwords must match.</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"phone\\\" class=\\\"col-md-8 control-label\\\">Phone</label>\\n            <input type=\\\"text\\\" ngControl=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" required=\\\"required\\\" placeholder=\\\"phone number\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"login-btn\\\" [routerLink]=\\\"['Login']\\\">Back to <strong>login</strong>?</a>\\n        </div>\\n        <!--<p>{{registerForm.value|json}}</p>-->\\n    </form>\\n    <!--TODO Remove this later: {{formStatus}}-->\\n</div>\"\n\n/***/ },\n\n/***/ 630:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(gsap, $, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar common_1 = __webpack_require__(33);\n\tvar email_validator_ts_1 = __webpack_require__(639);\n\tvar password_validator_ts_1 = __webpack_require__(640);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar Register = (function () {\n\t    function Register(_router, authService, fb) {\n\t        this._router = _router;\n\t        this.authService = authService;\n\t        this.fb = fb;\n\t        this.authService.registerError = '';\n\t        this.email = new common_1.Control('', common_1.Validators.compose([common_1.Validators.required, email_validator_ts_1.EmailValidator.validEmail]), email_validator_ts_1.EmailValidator.emailAlreadyExist);\n\t        this.registerForm = fb.group({\n\t            firstName: new common_1.Control('', common_1.Validators.required),\n\t            \"lastName\": new common_1.Control('', common_1.Validators.required),\n\t            matching_password: fb.group({\n\t                password: ['', common_1.Validators.required],\n\t                confirm: ['', common_1.Validators.required]\n\t            }, { validator: password_validator_ts_1.PasswordValidator.matchPassword }),\n\t            \"email\": this.email,\n\t            \"phone\": ['', common_1.Validators.required]\n\t        });\n\t        this.passwordGroup = this.registerForm.controls['matching_password'];\n\t    }\n\t    Object.defineProperty(Register.prototype, \"formStatus\", {\n\t        get: function () {\n\t            return JSON.stringify(this.registerForm.value);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Register.prototype.doRegister = function () {\n\t        this.authService.doRegister(this.registerForm.value);\n\t    };\n\t    Register.prototype.ngOnInit = function () {\n\t        if (this.authService.isAuthenticated()) {\n\t            return this._router.navigate(['Dashboard']);\n\t        }\n\t    };\n\t    Register.prototype.routerOnActivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Register Page - initialized\");\n\t            gsap.fromTo($(\"#glab-register\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 300); });\n\t        }\n\t    };\n\t    Register.prototype.routerOnDeactivate = function (next, prev) {\n\t        if (!this.authService.isAuthenticated()) {\n\t            console.log(\"Register Page - destroyed\");\n\t            gsap.fromTo($(\"#glab-register\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\t            return new Promise(function (res, rej) { return setTimeout(function () { return res(1); }, 100); });\n\t        }\n\t    };\n\t    Register = __decorate([\n\t        core_1.Component({\n\t            selector: 'register',\n\t            template: __webpack_require__(422),\n\t            directives: [router_1.ROUTER_DIRECTIVES, common_1.FORM_DIRECTIVES]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService, common_1.FormBuilder])\n\t    ], Register);\n\t    return Register;\n\t})();\n\texports.Register = Register;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(41), __webpack_require__(31), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 423:\n418,\n\n/***/ 631:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar NewWait = (function () {\n\t    function NewWait(_router, _service) {\n\t        this._router = _router;\n\t        this._service = _service;\n\t    }\n\t    NewWait.prototype.doLogin = function () {\n\t    };\n\t    NewWait = __decorate([\n\t        core_1.Component({\n\t            selector: 'new-wait',\n\t            template: __webpack_require__(423),\n\t            directives: [router_1.ROUTER_DIRECTIVES],\n\t            providers: [auth_service_1.AuthService]\n\t        }), \n\t        __metadata('design:paramtypes', [router_1.Router, auth_service_1.AuthService])\n\t    ], NewWait);\n\t    return NewWait;\n\t})();\n\texports.NewWait = NewWait;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 632:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar common_1 = __webpack_require__(33);\n\tvar lang_1 = __webpack_require__(1);\n\tvar RADIO_VALUE_ACCESSOR = lang_1.CONST_EXPR(new core_1.Provider(common_1.NG_VALUE_ACCESSOR, { useExisting: core_1.forwardRef(function () { return RadioControlValueAccessor; }), multi: true }));\n\tvar RadioControlValueAccessor = (function () {\n\t    function RadioControlValueAccessor(_renderer, _elementRef) {\n\t        this._renderer = _renderer;\n\t        this._elementRef = _elementRef;\n\t        this.onChange = function (_) { };\n\t        this.onTouched = function () { };\n\t    }\n\t    RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t        this._renderer.setElementProperty(this._elementRef, 'checked', value == this._elementRef.nativeElement.value);\n\t    };\n\t    RadioControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t    RadioControlValueAccessor = __decorate([\n\t        core_1.Directive({\n\t            selector: 'input[type=radio][ngControl],input[type=radio][ngFormControl],input[type=radio][ngModel]',\n\t            host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t            bindings: [RADIO_VALUE_ACCESSOR]\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.Renderer, core_1.ElementRef])\n\t    ], RadioControlValueAccessor);\n\t    return RadioControlValueAccessor;\n\t})();\n\texports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 633:\n/***/ function(module, exports) {\n\n\tvar LoginForm = (function () {\n\t    function LoginForm(email, password) {\n\t        this.email = email;\n\t        this.password = password;\n\t    }\n\t    return LoginForm;\n\t})();\n\texports.LoginForm = LoginForm;\n\n\n/***/ },\n\n/***/ 634:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar http_1 = __webpack_require__(34);\n\tvar AppService = (function () {\n\t    function AppService(http) {\n\t        this.http = http;\n\t        this.nav = {};\n\t        this.nav = { title: 'Please Login First To Book Appointment' };\n\t    }\n\t    AppService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [http_1.Http])\n\t    ], AppService);\n\t    return AppService;\n\t})();\n\texports.AppService = AppService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 635:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar http_1 = __webpack_require__(34);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar AppointmentService = (function () {\n\t    function AppointmentService(router, http, _auth) {\n\t        this.router = router;\n\t        this.http = http;\n\t        this._auth = _auth;\n\t        this.loading = '';\n\t        this.services = [{ name: 'Acupuncture', id: 1 }, { id: 2, name: 'Bio-Meridian' }];\n\t        this.reminders = ['Email', 'Phone'];\n\t    }\n\t    AppointmentService.prototype.fetchPractitioners = function (service) {\n\t        var _this = this;\n\t        this.loading = 'practitioners';\n\t        var options = { \"headers\": new http_1.Headers({\n\t                \"Authorization\": \"Bearer \" + this._auth.getToken(),\n\t                \"Content-Type\": \"application/json\"\n\t            }) };\n\t        this.http.get(\"/api/practitioners\", options)\n\t            .subscribe(function (rep, err) {\n\t            if (err) {\n\t                console.log(\"Error : \", err);\n\t                throw err;\n\t            }\n\t            console.log(\"Answer is : \", rep);\n\t            var response = rep.json();\n\t            if (response.success) {\n\t                _this.practitioners = response.message;\n\t            }\n\t            _this.loading = '';\n\t        });\n\t    };\n\t    AppointmentService.prototype.fetchSlots = function (date) {\n\t        this.slots = ['10:00AM', '10:30AM', '11:00AM'];\n\t    };\n\t    AppointmentService.prototype.doAppointment = function (apptFormData) {\n\t        var _this = this;\n\t        this.errorMsg = '';\n\t        this.successMsg = '';\n\t        var body = JSON.stringify(apptFormData);\n\t        var options = { \"headers\": new http_1.Headers({\n\t                \"Authorization\": \"Bearer \" + this._auth.getToken(),\n\t                \"Content-Type\": \"application/json\"\n\t            }) };\n\t        this.http.post(\"/api/appt/save\", body, options)\n\t            .subscribe(function (rep, err) {\n\t            if (err) {\n\t                console.log(\"Error : \", err);\n\t                throw err;\n\t            }\n\t            console.log(\"Answer is : \", rep);\n\t            var response = rep.json();\n\t            if (response.success) {\n\t                _this.successMsg = response.message;\n\t            }\n\t            else {\n\t                _this.errorMsg = response.message;\n\t            }\n\t        });\n\t    };\n\t    AppointmentService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [router_1.Router, http_1.Http, auth_service_1.AuthService])\n\t    ], AppointmentService);\n\t    return AppointmentService;\n\t})();\n\texports.AppointmentService = AppointmentService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 20:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar cookie_service_1 = __webpack_require__(339);\n\tvar http_1 = __webpack_require__(34);\n\tvar router_1 = __webpack_require__(16);\n\tvar AuthService = (function () {\n\t    function AuthService(router, cookies, http) {\n\t        this.router = router;\n\t        this.cookies = cookies;\n\t        this.http = http;\n\t        this.authenticated = false;\n\t        this.expires = 0;\n\t        this.tokenCookieName = 'glab-tkn';\n\t        this.jwt = \"\";\n\t        this.loginError = \"\";\n\t        this.registerError = \"\";\n\t        this.successMsg = \"\";\n\t        console.log(\"called auth service with \" + this.authenticated);\n\t        this.jwt = this.getToken();\n\t    }\n\t    AuthService.prototype.doLogin = function (user, password) {\n\t        var _this = this;\n\t        this.loginError = '';\n\t        this.jwt = \"\";\n\t        var body = JSON.stringify({ \"user\": user, \"password\": password });\n\t        var options = { \"headers\": new http_1.Headers({ \"Content-Type\": \"application/json\" }) };\n\t        this.http.post(\"/jwt\", body, options)\n\t            .subscribe(function (rep, err) {\n\t            if (err) {\n\t                console.log(\"Error : \", err);\n\t                throw err;\n\t            }\n\t            console.log(\"Answer is : \", rep);\n\t            var response = rep.json();\n\t            if (response.success) {\n\t                _this.cookies.setCookie(_this.tokenCookieName, response.message, '/', '');\n\t                if (_this.cookies.getCookie(_this.tokenCookieName)) {\n\t                    _this.jwt = response.message;\n\t                    _this.authenticated = true;\n\t                    _this.router.navigate(['Dashboard']);\n\t                }\n\t            }\n\t            else {\n\t                _this.jwt = \"\";\n\t                _this.loginError = response.message;\n\t            }\n\t        });\n\t    };\n\t    AuthService.prototype.doRegister = function (registerFormData) {\n\t        var _this = this;\n\t        this.registerError = '';\n\t        this.successMsg = '';\n\t        var body = JSON.stringify(registerFormData);\n\t        var options = { \"headers\": new http_1.Headers({ \"Content-Type\": \"application/json\" }) };\n\t        this.http.post(\"/register\", body, options)\n\t            .subscribe(function (rep, err) {\n\t            if (err) {\n\t                console.log(\"Error : \", err);\n\t                throw err;\n\t            }\n\t            console.log(\"Answer is : \", rep);\n\t            var response = rep.json();\n\t            if (response.success) {\n\t                _this.successMsg = response.message;\n\t            }\n\t            else {\n\t                _this.registerError = response.message;\n\t            }\n\t        });\n\t    };\n\t    AuthService.prototype.clearCookie = function () {\n\t        this.cookies.removeCookie(this.tokenCookieName);\n\t    };\n\t    AuthService.prototype.doLogout = function () {\n\t        this.clearCookie();\n\t    };\n\t    AuthService.prototype.isAuthenticated = function () {\n\t        return this.cookies.getCookie(this.tokenCookieName);\n\t    };\n\t    AuthService.prototype.getToken = function () {\n\t        return this.cookies.getCookie(this.tokenCookieName);\n\t    };\n\t    AuthService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [router_1.Router, cookie_service_1.CookieService, http_1.Http])\n\t    ], AuthService);\n\t    return AuthService;\n\t})();\n\texports.AuthService = AuthService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 339:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Cookies, __decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar CookieService = (function () {\n\t    function CookieService() {\n\t        this.cookies = Cookies;\n\t    }\n\t    CookieService.prototype.getCookie = function (cookieName) {\n\t        return this.cookies.get(cookieName);\n\t    };\n\t    CookieService.prototype.getAllCookies = function () {\n\t        return this.cookies.get();\n\t    };\n\t    CookieService.prototype.setCookie = function (name, value, path, domain, expiresInDays) {\n\t        if (path === void 0) { path = '/'; }\n\t        if (expiresInDays === void 0) { expiresInDays = 0; }\n\t        var options = {};\n\t        options.path = path;\n\t        if (domain) {\n\t            options.domain = domain;\n\t        }\n\t        if (expiresInDays > 0) {\n\t            options.expires = expiresInDays;\n\t        }\n\t        this.cookies.set(name, value, options);\n\t    };\n\t    CookieService.prototype.removeCookie = function (name) {\n\t        this.cookies.remove(name);\n\t    };\n\t    CookieService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], CookieService);\n\t    return CookieService;\n\t})();\n\texports.CookieService = CookieService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(412), __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 636:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar http_1 = __webpack_require__(34);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar HistoryService = (function () {\n\t    function HistoryService(router, http, _auth) {\n\t        this.router = router;\n\t        this.http = http;\n\t        this._auth = _auth;\n\t        this.loading = '';\n\t    }\n\t    HistoryService.prototype.load = function () {\n\t        var _this = this;\n\t        setTimeout(function () {\n\t            _this.appointments = [\n\t                { service: 'Acupuncture', practitioner: 'Rebecca Risk', date: '12-12-2016', time: '12:30pm', status: 'expired' },\n\t                { service: 'Acupuncture', practitioner: 'Rebecca Risk', date: '12-12-2016', time: '12:30pm', status: 'upcoming' }\n\t            ];\n\t        });\n\t    };\n\t    HistoryService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [router_1.Router, http_1.Http, auth_service_1.AuthService])\n\t    ], HistoryService);\n\t    return HistoryService;\n\t})();\n\texports.HistoryService = HistoryService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 637:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar http_1 = __webpack_require__(34);\n\tvar router_1 = __webpack_require__(16);\n\tvar auth_service_1 = __webpack_require__(20);\n\tvar ProfileService = (function () {\n\t    function ProfileService(router, http, _auth) {\n\t        this.router = router;\n\t        this.http = http;\n\t        this._auth = _auth;\n\t        console.log('instantiation');\n\t    }\n\t    ProfileService.prototype.fetch = function (user) {\n\t        if (!user) {\n\t            user = 'bearer';\n\t        }\n\t        var options = { \"headers\": new http_1.Headers({\n\t                \"Authorization\": \"Bearer \" + this._auth.getToken(),\n\t                \"Content-Type\": \"application/json\"\n\t            }) };\n\t        return this.http.get(\"/api/profile/\" + user, options);\n\t    };\n\t    ProfileService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [router_1.Router, http_1.Http, auth_service_1.AuthService])\n\t    ], ProfileService);\n\t    return ProfileService;\n\t})();\n\texports.ProfileService = ProfileService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 638:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__decorate, __metadata) {var core_1 = __webpack_require__(6);\n\tvar WindowService = (function () {\n\t    function WindowService() {\n\t    }\n\t    WindowService.prototype.createWindow = function (url, name, width, height, left, top) {\n\t        if (name === void 0) { name = 'Window'; }\n\t        if (width === void 0) { width = 500; }\n\t        if (height === void 0) { height = 600; }\n\t        if (left === void 0) { left = 0; }\n\t        if (top === void 0) { top = 0; }\n\t        if (url == null) {\n\t            return null;\n\t        }\n\t        var options = \"width=\" + width + \",height=\" + height + \",left=\" + left + \",top=\" + top;\n\t        return window.open(url, name, options);\n\t    };\n\t    WindowService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], WindowService);\n\t    return WindowService;\n\t})();\n\texports.WindowService = WindowService;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13), __webpack_require__(14)))\n\n/***/ },\n\n/***/ 639:\n/***/ function(module, exports) {\n\n\tvar EmailValidator = (function () {\n\t    function EmailValidator() {\n\t    }\n\t    EmailValidator.validEmail = function (control) {\n\t        var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\t        if (!EMAIL_REGEXP.test(control.value)) {\n\t            return { 'validEmail': true };\n\t        }\n\t    };\n\t    EmailValidator.emailAlreadyExist = function (control) {\n\t        return new Promise(function (resolve, reject) {\n\t            setTimeout(function () {\n\t                if (control.value === \"some@gmail.com\") {\n\t                    resolve({ \"emailAlreadyExist\": true });\n\t                }\n\t                else {\n\t                    resolve(null);\n\t                }\n\t                ;\n\t            }, 1000);\n\t        });\n\t    };\n\t    return EmailValidator;\n\t})();\n\texports.EmailValidator = EmailValidator;\n\n\n/***/ },\n\n/***/ 640:\n/***/ function(module, exports) {\n\n\tvar PasswordValidator = (function () {\n\t    function PasswordValidator() {\n\t    }\n\t    PasswordValidator.matchPassword = function (group) {\n\t        var password = group.controls['password'];\n\t        var confirm = group.controls['confirm'];\n\t        if (password.pristine || confirm.pristine) {\n\t            return null;\n\t        }\n\t        group.markAsTouched();\n\t        console.log(password.value, ' and ', confirm.value);\n\t        if (password.value === confirm.value) {\n\t            return null;\n\t        }\n\t        return {\n\t            isValid: true\n\t        };\n\t    };\n\t    return PasswordValidator;\n\t})();\n\texports.PasswordValidator = PasswordValidator;\n\n\n/***/ },\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar core_1 = __webpack_require__(6);\n\tvar browser_1 = __webpack_require__(151);\n\tvar router_1 = __webpack_require__(16);\n\tvar http_1 = __webpack_require__(34);\n\tvar common_1 = __webpack_require__(33);\n\tvar app_1 = __webpack_require__(622);\n\tvar window_service_1 = __webpack_require__(638);\n\tdocument.addEventListener('DOMContentLoaded', function main() {\n\t    browser_1.bootstrap(app_1.App, ( true ? [] : browser_1.ELEMENT_PROBE_PROVIDERS).concat(http_1.HTTP_PROVIDERS, router_1.ROUTER_PROVIDERS, common_1.COMMON_DIRECTIVES, router_1.ROUTER_DIRECTIVES, [\n\t        window_service_1.WindowService,\n\t        core_1.provide(router_1.LocationStrategy, { useClass: router_1.HashLocationStrategy })\n\t    ]))\n\t        .catch(function (err) { return console.error(err); });\n\t});\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** main.872e8ba13fe54bc54c41.bundle.js\n **/","/*!\n * JavaScript Cookie v2.1.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\tvar _OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = _OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires && '; expires=' + attributes.expires.toUTCString(), // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path    && '; path=' + attributes.path,\n\t\t\t\t\tattributes.domain  && '; domain=' + attributes.domain,\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.get = api.set = api;\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-cookie/src/js.cookie.js\n ** module id = 412\n ** module chunks = 1\n **/","module.exports = (this && this.Reflect && Reflect.decorate) || (this.__decorate) || function (decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ts-helper/decorate.js\n ** module id = 13\n ** module chunks = 1\n **/","module.exports = (this && this.Reflect && Reflect.metadata) || (this.__metadata) || function (k, v) {\n  if (typeof Reflect === 'object' && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ts-helper/metadata.js\n ** module id = 14\n ** module chunks = 1\n **/","module.exports = \"<!-- MAIN CONTENT AREA -->\\n<div class=\\\"container-fluid main-wrapper\\\">\\n    <navbar [nav]=\\\"appService.nav\\\"></navbar>\\n    <div class=\\\"row\\\">\\n        <div id=\\\"glab-main-container\\\" class=\\\"col-lg-12 main-container\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n    <div class=\\\"row footer\\\">\\n        <div class=\\\"col-lg-12 text-center\\\">\\n            Design & Developed by <a href=\\\"http://jahid.me\\\" >jahidul Islam</a>\\n        </div>\\n    </div>\\n</div>\\n<!-- END OF MAIN CONTENT -->\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.html\n ** module id = 414\n ** module chunks = 1\n **/","import {Component, provide} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, RouteConfig, ROUTER_PROVIDERS, RouterOutlet, PathLocationStrategy, HashLocationStrategy, LocationStrategy} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\nimport {bootstrap} from 'angular2/platform/browser';\nimport {COMMON_DIRECTIVES} from 'angular2/common';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {Register} from './components/register/register';\nimport {Login} from './components/login/login';\nimport {Forgot} from './components/forgot/forgot';\n// import {Dashboard} from './components/dashboard/dashboard';\n\nimport {NewAppt} from './components/appt/new';\nimport {NewWait} from './components/wait/new';\nimport {ApptHistory} from './components/appt/history';\n// import {WaitHistory} from './components/wait/history';\nimport {EditProfile} from './components/profile/edit';\nimport {Loggedout} from './components/loggedout/loggedout';\n\nimport {AppService} from './services/app.service';\nimport {AuthService} from './services/auth.service';\nimport {WindowService} from './services/window.service';\nimport {CookieService} from './services/cookie.service';\nimport {NavBar} from './components/navbar/navbar';\n\n@Component({\n    selector: 'app',\n    directives: [NavBar, RouterOutlet, ROUTER_DIRECTIVES],\n    viewProviders: [AuthService, AppService, CookieService],\n    // providers: [AppService],\n    template: require('./app.html')\n})\n\n@RouteConfig([\n    { path: '/', name: 'Default', component: Login },\n    { path: '/login', name: 'Login', component: Login, useAsDefault: true },\n    { path: '/register', name: 'Register', component: Register },\n    { path: '/forgot', name: 'Forgot', component: Forgot },\n    { path: '/dashboard', name: 'Dashboard', component: NewAppt },\n    { path: '/appt', name: 'NewAppt', component: NewAppt },\n    { path: '/wait', name: 'NewWait', component: NewWait },\n    { path: '/history/app', name: 'ApptHistory', component: ApptHistory },\n    // { path: '/history/wait', name: 'WaitHistory', component: WaitHistory },\n    { path: '/edit-profile', name: 'EditProfile', component: EditProfile },\n    { path: '/loggedout', name: 'Loggedout', component: Loggedout }\n])\n\nexport class App {\n    constructor(private appService: AppService) {\n\n    }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/app.ts\n **/","module.exports = \"<div id=\\\"glab-app-history\\\" class=\\\"glab-app-history\\\" data-title=\\\"Appointment History\\\">\\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n                <th>Service</th>\\n                <th>Practitioner</th>\\n                <th>Date</th>\\n                <th>Time</th>\\n                <th>Action</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"#appt of _historyService.appointments\\\" >\\n                <td>\\n                    {{appt.service}}\\n                </td>\\n                <td>\\n                    {{appt.practitioner}}\\n                </td>\\n                <td>\\n                    {{appt.date}}\\n                </td>\\n                <td>\\n                    {{appt.time}}\\n                </td>\\n                <td>\\n                    <a *ngIf=\\\"appt.status==='upcoming'\\\" class=\\\"cancel-appt-btn\\\" href=\\\"#\\\">Cancel</a>\\n                    <span *ngIf=\\\"appt.status==='expired'\\\" >N/A</span>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/appt/history.html\n ** module id = 415\n ** module chunks = 1\n **/","import {Component, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, Location, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n\nimport {AuthService} from '../../services/auth.service';\nimport {HistoryService} from '../../services/history.service';\n\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'appt-history',\n    template: require('./history.html'),\n    directives: [ROUTER_DIRECTIVES],\n    providers: [HistoryService]\n})\n\nexport class ApptHistory implements OnInit, OnActivate, OnDeactivate {\n\n    constructor(\n        private _router: Router,\n        private _service: AuthService,\n        public _historyService: HistoryService\n    ) { \n        \n    }\n\n\n    ngOnInit() {\n        if (!this._service.isAuthenticated()) {\n            this._router.navigate(['Default']);\n        }\n        \n        this._historyService.load();\n    }\n\n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"history Page - initialized\");\n\n        gsap.fromTo($(\".glab-app-history\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 300));\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"history Page - destroyed\");\n        gsap.fromTo($(\".glab-app-history\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 100));\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/appt/history.ts\n **/","module.exports = \"<div id=\\\"glab-new-appt\\\" data-title=\\\"Make an appointment\\\">\\n    <div  [hidden]=\\\"!_apptService.successMsg\\\" class=\\\"alert alert-success\\\"  role=\\\"alert\\\">{{_apptService.successMsg}}</div>\\n    <div  [hidden]=\\\"!_apptService.errorMsg\\\" class=\\\"alert alert-danger\\\"  role=\\\"alert\\\">{{_apptService.errorMsg}}</div>\\n    \\n    <form [hidden]=\\\"_apptService.successMsg\\\" [ngFormModel]=\\\"apptForm\\\" #f=\\\"ngForm\\\" (ngSubmit)=\\\"doAppointment()\\\" role=\\\"form\\\" method=\\\"post\\\" action=\\\"submitApp\\\" data-update=\\\"#glab-main-container\\\" class=\\\"glab-new-form glab-form\\\">\\n        \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"service\\\">Service</label>\\n            <select ngControl=\\\"service\\\" (change)=\\\"changePractitioners($event)\\\" required id=\\\"service\\\" class=\\\"form-control\\\" name=\\\"services\\\" placeholder=\\\"Select Service\\\">\\n                <option value=\\\"\\\" disabled selected>Select Service</option>\\n                <option *ngFor=\\\"#s of _apptService.services\\\" [value]=\\\"s.id\\\">{{ s.name }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"practitioner\\\">Practitioner</label>\\n            <select ngControl=\\\"practitioner\\\" id=\\\"practitioner\\\" required  class=\\\"form-control\\\" name=\\\"practitioners\\\">\\n                <option value=\\\"\\\" disabled selected>Select Pracitioner</option>\\n                <option *ngFor=\\\"#p of _apptService.practitioners\\\" [value]=\\\"p._id\\\">{{ p.firstName + ' ' + p.lastName }}</option>\\n            </select>\\n            <span *ngIf=\\\"_apptService.loading==='practitioners'\\\">loading....</span>\\n        </div>\\n\\n        <div class=\\\"form-group app-date-container\\\">\\n            <label for=\\\"app_date\\\">Appointment Date:</label>\\n            <input #date ngControl=\\\"date\\\" required   placeholder=\\\"Select Date\\\" type=\\\"text\\\" class=\\\"form-control datepicker\\\" name=\\\"app_date\\\" id=\\\"app_date\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"app_time\\\">Time:</label>\\n            <select ngControl=\\\"slot\\\" required  id=\\\"app_time\\\" class=\\\"form-control\\\" name=\\\"app_time\\\">\\n                <option value=\\\"\\\" disabled selected>Select Slot</option>\\n                <option *ngFor=\\\"#slot of _apptService.slots\\\" [value]=\\\"slot\\\">{{ slot }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"app_reminder\\\">Reminder Type:</label>\\n            <select ngControl=\\\"reminder\\\" required id=\\\"app_reminder\\\" class=\\\"form-control\\\" name=\\\"app_reminder\\\">\\n                <option value=\\\"\\\" disabled selected>Select Reminder</option>\\n                <option *ngFor=\\\"#reminder of _apptService.reminders\\\" [value]=\\\"reminder\\\">{{ reminder }}</option>\\n            </select>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"pt_comments\\\">Add Comment:</label>\\n            <textarea ngControl=\\\"comment\\\" #comment class=\\\"form-control\\\" id=\\\"pt_comments\\\" name=\\\"pt_comments\\\"></textarea>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <!--<div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"wait-btn\\\">or Request an <strong>waiting appointment</strong></a>\\n            <a href=\\\"#\\\" class=\\\"new-btn\\\">or Create an <strong> appointment</strong></a>\\n        </div>-->\\n    </form>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/appt/new.html\n ** module id = 416\n ** module chunks = 1\n **/","import {Component, ElementRef, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, Location, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n\n// load form related functionality\nimport {FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES, AbstractControl}    from 'angular2/common';\n// load local dependency\nimport {AuthService} from '../../services/auth.service';\nimport {AppointmentService} from '../../services/appointment.service';\n\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'new-appt',\n    template: require('./new.html'),\n    directives: [ROUTER_DIRECTIVES, FORM_DIRECTIVES],\n    providers: [AppointmentService]\n})\n\nexport class NewAppt implements OnInit, OnActivate, OnDeactivate {\n    elementRef: ElementRef;\n    apptForm: ControlGroup;\n    // counter: number = 0;\n    testdate: string;\n    \n    constructor(\n        private _router: Router,\n        private _service: AuthService,\n        private _apptService: AppointmentService,\n        elementRef: ElementRef,\n        private fb: FormBuilder\n    ) {\n        this.elementRef = elementRef;\n        // console.log(this._apptService.services);\n        this.apptForm = fb.group({\n            service: new Control('', Validators.required),\n            \"practitioner\": new Control('', Validators.required),\n            \"date\": new Control('', Validators.required),\n            \"slot\": ['', Validators.required],\n            \"reminder\": ['', Validators.required],\n            \"comment\": []\n        });\n        \n        // watch for date change\n        this.apptForm.controls['date'].valueChanges.subscribe((value) => {\n            this.changeSlots(value);\n        });\n    }\n\n    ngOnInit() {\n        if (!this._service.isAuthenticated()) {\n            this._router.navigate(['Default']);\n        }\n        \n        // for bootstrap datepicker enable it\n        // $(this.elementRef.nativeElement).find('.datepicker').datepicker();\n        $(this.elementRef.nativeElement).find('.datepicker').datepicker({ autoclose: true, immediateUpdates: true })\n            .on('changeDate', (e) => {\n                console.log(\"date changed\");\n                (<Control>this.apptForm.controls['date']).updateValue(e.format('mm/dd/yyyy'));\n            });\n    }\n    \n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"NewAppt Page - initialized\");\n\n        gsap.fromTo($(\".glab-new-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 300));\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"NewAppt Page - destroyed\");\n        gsap.fromTo($(\".glab-new-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 100));\n    }\n\n    changePractitioners($event) {\n        this._apptService.fetchPractitioners($event.target.value);\n    }\n\n    changeSlots(value) {\n        // console.log('firing with , ', value)\n        this._apptService.fetchSlots(value);\n    }\n\n    doAppointment(){\n        this._apptService.doAppointment(this.apptForm.value);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/appt/new.ts\n **/","module.exports = \"<div id=\\\"glab-forgot\\\" data-title=\\\"Enter Email Address To Get Password\\\">\\n    <form role=\\\"form\\\" data-update=\\\"#forgotSuccess\\\" class=\\\"glab-forgot-form glab-form\\\" action=\\\"forgotPassword.php\\\" method=\\\"post\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" required id=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"login-btn\\\" [routerLink]=\\\"['Login']\\\">Back To <strong>Login</strong>?</a>\\n        </div>\\n\\n    </form>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/forgot/forgot.html\n ** module id = 417\n ** module chunks = 1\n **/","import {Component, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n\nimport {AuthService} from '../../services/auth.service';\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n\n@Component({\n    selector: 'forgot',\n    template: require('./forgot.html'),\n    directives: [ROUTER_DIRECTIVES]\n})\n\nexport class Forgot implements OnInit, OnActivate, OnDeactivate{\n    constructor(\n        private _router: Router,\n        private authService: AuthService\n    ){\n        \n    }\n    ngOnInit() {\n        if (this.authService.isAuthenticated()) {\n            return this._router.navigate(['Dashboard']);\n        }\n    }\n    \n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Register Page - initialized\");\n            gsap.fromTo($(\".glab-forgot-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 300));\n        }\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Register Page - destroyed\");\n            gsap.fromTo($(\".glab-forgot-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 100));\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/forgot/forgot.ts\n **/","module.exports = \"\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/loggedout/loggedout.html\n ** module id = 418\n ** module chunks = 1\n **/","import {Component} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\n\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'logged-out',\n    template: require('./loggedout.html'),\n    directives: [ROUTER_DIRECTIVES],\n    providers: [AuthService]\n})\n\nexport class Loggedout{\n    \n    constructor(\n\t\tprivate _router: Router,\n\t\tprivate _service: AuthService\n\t){}\n    \n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/loggedout/loggedout.ts\n **/","module.exports = \"<div id=\\\"glab-login\\\" style=\\\"padding-top: 20px;\\\" data-title=\\\"Please Login First To Book Appointment\\\">\\n    <div id=\\\"\\\" *ngIf=\\\"hasError\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">{{ error }}</div>\\n    <form role=\\\"form\\\" action=\\\"login\\\" (ngSubmit)=\\\"onSubmit()\\\"  #loginForm=\\\"ngForm\\\" method=\\\"post\\\" class=\\\"glab-login-form glab-form\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email address</label>\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" required [(ngModel)]=\\\"model.email\\\" ngControl=\\\"email\\\" #spy\\n            #email=\\\"ngForm\\\" placeholder=\\\"Enter email\\\">\\n            <div [hidden]=\\\"email.untouched || email.valid\\\" class=\\\"alert alert-danger\\\">\\n                Email is required\\n            </div>\\n            <!--TODO: remove this: {{model.email}} TODO: remove this: {{spy.className}}-->\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" ngControl=\\\"password\\\"\\n            placeholder=\\\"Password\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"forgot-btn\\\" [routerLink]=\\\"['Forgot']\\\">Forgot <strong>Password</strong>?</a>\\n            <br/>\\n            <a href=\\\"#\\\" class=\\\"register-btn\\\" [routerLink]=\\\"['Register']\\\">Create <strong>Account</strong>?</a>\\n        </div>\\n    </form>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/login/login.html\n ** module id = 419\n ** module chunks = 1\n **/","import {Component, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n\n// load form related functionality\nimport {FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES}    from 'angular2/common';\n\nimport {LoginForm} from '../../forms/login.form';\nimport {AuthService} from '../../services/auth.service';\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'login',\n    template: require('./login.html'),\n    directives: [ROUTER_DIRECTIVES, FORM_DIRECTIVES],\n    // providers: [AuthService]\n})\n\nexport class Login implements OnInit, OnActivate, OnDeactivate {\n    user: string = \"\";\n    password: string = \"\";\n    model: LoginForm;\n\n    constructor(\n        private _router: Router,\n        private authService: AuthService\n    ) {\n        this.authService.loginError='';\n        this.model = new LoginForm('', '');\n    }\n\n    // whether login request contains an error or not\n    // when user submit a request for login to server\n    get hasError() {\n        return this.authService.loginError;\n    }\n\n    get error() {\n        return this.authService.loginError;\n    }\n\n    onSubmit() {\n        console.log('calling auth service');\n        this.authService.doLogin(this.model.email, this.model.password);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() { return JSON.stringify(this.model); }\n\n\n    // doLogin() {\n    //     console.log('calling auth service');\n    //     this.authService.doLogin(this.user, this.password);\n    //     // this._router.navigate(['Dashboard']);\n    // }\n    \n    ngOnInit() {\n        if (this.authService.isAuthenticated()) {\n            return this._router.navigate(['Dashboard']);\n        }\n    }\n\n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Login Page - initialized\");\n            gsap.fromTo($(\".glab-login-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 300));\n        }\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Login Page - destroyed\");\n            gsap.fromTo($(\".glab-login-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 100));\n        }\n    }\n\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/login/login.ts\n **/","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 banner-container\\\">\\n        <a href=\\\"#\\\" [routerLink]=\\\"['Default']\\\" class=\\\"glab-home\\\"><span class=\\\"glyphicon glyphicon-home glab-home-icon\\\"></span></a>\\n        <h1 id=\\\"banner-title\\\">{{ nav.title }}</h1>\\n        <div id=\\\"nav-menu\\\">\\n            <a *ngIf=\\\"!authenticated\\\" href=\\\"#\\\" class=\\\"btn btn-default glab-btn register-btn\\\" [routerLink]=\\\"['Register']\\\">Register</a>\\n            <div *ngIf=\\\"authenticated\\\" class=\\\"btn-group\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default glab-btn dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                    Actions\\n                    <span class=\\\"caret\\\"></span>\\n                </button>\\n                <ul class=\\\"dropdown-menu actions-menu\\\" role=\\\"menu\\\">\\n                    <li><a [routerLink]=\\\"['NewAppt']\\\" href=\\\"#\\\">New Appt.</a></li>\\n                    <li><a [routerLink]=\\\"['ApptHistory']\\\" href=\\\"#glab-app-history\\\">Appt History</a></li>\\n                    <!--<li><a [routerLink]=\\\"['WaitHistory']\\\" href=\\\"#glab-wait-history\\\">Waiting History</a></li> -->\\n                    <li><a [routerLink]=\\\"['EditProfile']\\\" href=\\\"#glab-edit-profile\\\">Edit Profile</a></li>\\n                    <li><a (click)=\\\"doLogout()\\\" href=\\\"#\\\">Logout</a></li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/navbar/navbar.html\n ** module id = 420\n ** module chunks = 1\n **/","//These first 3 lines will be deprecated by the final release\nimport {Component} from \"angular2/core\";\n\nimport {ROUTER_DIRECTIVES, Router, Location} from \"angular2/router\";\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'navbar',\n    template: require('./navbar.html'),\n    // providers: [AuthService],\n    inputs: ['nav'],\n    directives: [ROUTER_DIRECTIVES]\n})\n\nexport class NavBar{\n    \n    constructor(private router:Router, private authService:AuthService) {\n    }\n    \n    get authenticated() {\n        return this.authService.isAuthenticated();\n    }\n    \n    doLogout(){\n        this.authService.doLogout();\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/navbar/navbar.ts\n **/","module.exports = \"<div id=\\\"glab-edit-profile\\\" data-title=\\\"Please Login First To Book Appointment\\\">\\n    <form role=\\\"form\\\" [ngFormModel]=\\\"profileForm\\\" #f=\\\"ngForm\\\" method=\\\"post\\\" action=\\\"updateProfile\\\" data-update=\\\"#glab-edit-status\\\" class=\\\"glab-edit-profile-form glab-form\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editFirstName\\\">First Name</label>\\n            <input type=\\\"text\\\" required id=\\\"editFirstName\\\" class=\\\"form-control\\\" ngControl=\\\"firstName\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editLastName\\\">Last Name</label>\\n            <input type=\\\"text\\\" required id=\\\"editLastName\\\" class=\\\"form-control\\\" ngControl=\\\"lastName\\\" value=\\\"\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editEmail\\\">E-mail</label>\\n            <input type=\\\"text\\\" disabled=\\\"disabled\\\" id=\\\"editEmail\\\" class=\\\"form-control\\\" ngControl=\\\"email\\\" value=\\\"\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"pass_option\\\">Password</label>\\n            <a href=\\\"#\\\" id=\\\"pass_option\\\" name=\\\"pass_option\\\">change password?</a>\\n        </div>\\n\\n        <div class=\\\"form-group pass_options\\\">\\n            <label for=\\\"new_password\\\">New Password</label>\\n            <input type=\\\"password\\\" id=\\\"new_password\\\" class=\\\"form-control\\\" name=\\\"new_password\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group pass_options\\\">\\n            <label for=\\\"re_password\\\">Retype Password (Type your new password again)</label>\\n            <input type=\\\"password\\\" id=\\\"re_password\\\" class=\\\"form-control\\\" name=\\\"re_password\\\" />\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editPhone\\\">Phone</label>\\n            <input type=\\\"text\\\" required id=\\\"editPhone\\\" class=\\\"form-control\\\" ngControl=\\\"phone\\\" value=\\\"\\\" />\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"editContact\\\">Contact Me</label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact1\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"email\\\"> Email\\n            </label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact2\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"phone\\\"> Phone\\n            </label>\\n        </div>\\n\\n        <div class=\\\"checkbox\\\">\\n            <label>\\n                <input id=\\\"editContact3\\\" ngControl=\\\"contactMethod\\\" name=\\\"editContact\\\" type=\\\"radio\\\" value=\\\"both\\\"> Both\\n            </label>\\n        </div>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-default glab-btn\\\" style=\\\"\\\">Submit</button>\\n    </form>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/profile/edit.html\n ** module id = 421\n ** module chunks = 1\n **/","import {Component, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, Location, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n// form related directives\nimport {FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES, AbstractControl}    from 'angular2/common';\nimport {RadioControlValueAccessor} from \"../../directives/radio_value_accessor\";\n\nimport {Profile} from '../../forms/profile.form';\nimport {ProfileService} from '../../services/profile.service';\nimport {AuthService} from '../../services/auth.service';\n\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'edit-profile',\n    template: require('./edit.html'),\n    directives: [ROUTER_DIRECTIVES, FORM_DIRECTIVES, RadioControlValueAccessor],\n    providers: [ProfileService]\n})\n\nexport class EditProfile implements OnInit, OnActivate, OnDeactivate {\n    profileForm: ControlGroup;\n    currentProfile: any;\n    model: Profile;\n    constructor(\n        private _router: Router,\n        private _service: AuthService,\n        private fb: FormBuilder,\n        private _profileService: ProfileService\n    ) {\n        \n        // this approach also works\n        // this.model = new Profile();\n        // setTimeout(()=>{\n        //     this.model = new Profile('dice');\n        // }, 1000)\n        \n        \n        this.profileForm = fb.group({\n            firstName: new Control('', Validators.required),\n            lastName: new Control('', Validators.required),\n            email: new Control('', Validators.required),\n            phone: ['', Validators.required],\n            contactMethod: ['email', Validators.required]\n        });\n\n    }\n\n    ngOnInit() {\n        if (!this._service.isAuthenticated()) {\n            return this._router.navigate(['Default']);\n        }\n        \n        this._profileService.fetch().subscribe((rep, err) => {\n            if (err) {\n                console.log(\"Error : \", err);\n                throw err;\n            }\n            \n            var response = rep.json();\n            var profile = response.message;\n            //  console.log(profile.firstName);\n            (<Control>this.profileForm.controls['firstName']).updateValue(profile.firstName);\n            (<Control>this.profileForm.controls['lastName']).updateValue(profile.lastName);\n            (<Control>this.profileForm.controls['email']).updateValue(profile.email);\n            (<Control>this.profileForm.controls['phone']).updateValue(profile.phone);\n            (<Control>this.profileForm.controls['contactMethod']).updateValue(profile.contactInfo);\n        })\n    }\n    \n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"profile Page - initialized\");\n\n        gsap.fromTo($(\".glab-edit-profile-form\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 300));\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        console.log(\"profile Page - destroyed\");\n        gsap.fromTo($(\".glab-edit-profile-form\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n\n        // return Rx.Observable.of(true).delay(1000).toPromise();\n        return new Promise((res, rej) => setTimeout(() => res(1), 100));\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/profile/edit.ts\n **/","module.exports = \"<div id=\\\"glab-register\\\" data-title=\\\"Register to be a member of anantahealth\\\">\\n    <div  [hidden]=\\\"!authService.successMsg\\\" class=\\\"alert alert-success\\\"  role=\\\"alert\\\">{{authService.successMsg}}</div>\\n    <div  [hidden]=\\\"!authService.registerError\\\" class=\\\"alert alert-danger\\\"  role=\\\"alert\\\">{{authService.registerError}}</div>\\n    \\n    <form role=\\\"form\\\" *ngIf=\\\"!authService.successMsg\\\" (ngSubmit)=\\\"doRegister()\\\" [ngFormModel]=\\\"registerForm\\\" #f=\\\"ngForm\\\" method=\\\"post\\\" data-update=\\\"#regSuccess\\\" action=\\\"submitRegister\\\" class=\\\"glab-register-form glab-form\\\">\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"fName\\\" class=\\\"col-md-8 control-label\\\">First Name</label>\\n            <input type=\\\"text\\\" ngControl=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"fName\\\" name=\\\"fName\\\" required=\\\"required\\\" placeholder=\\\"First Name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"lName\\\" class=\\\"col-md-8 control-label\\\">Last Name</label>\\n            <input type=\\\"text\\\" ngControl=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"lName\\\" name=\\\"lName\\\" required=\\\"required\\\" placeholder=\\\"Last Name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"email\\\" class=\\\"col-md-8 control-label\\\">Email address</label>\\n            <input type=\\\"email\\\" ngControl=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" required=\\\"required\\\" placeholder=\\\"Email\\\">\\n            <p *ngIf=\\\"email.pending\\\">Fetching data from the server...</p>\\n            <div *ngIf=\\\"email.touched && !email.valid && !email.pending\\\">\\n                <p *ngIf=\\\"email.errors.required\\\">Email is required.</p>\\n                <p *ngIf=\\\"email.errors.validEmail\\\">Your email is not in valid format</p>\\n                <p *ngIf=\\\"email.errors.emailAlreadyExist\\\">This email is already registered</p>\\n            </div>\\n        </div>\\n\\n        <!--<div class=\\\"form-group required\\\">\\n            <label for=\\\"passwd\\\" class=\\\"col-md-8 control-label\\\">Password</label>\\n            <input type=\\\"password\\\" ngControl=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passwd\\\" name=\\\"passwd\\\" required=\\\"required\\\" placeholder=\\\"Password\\\">\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"rPasswd\\\" class=\\\"col-md-8 control-label\\\">Retype Password</label>\\n            <input type=\\\"password\\\" ngControl=\\\"confirm\\\" class=\\\"form-control\\\" id=\\\"rPasswd\\\" name=\\\"rPasswd\\\" required=\\\"required\\\" placeholder=\\\"Retype Password\\\">\\n        </div>-->\\n        <!--[class.invalid]=\\\"passwordGroup.touched && !passwordGroup.valid\\\"-->\\n        <div ngControlGroup=\\\"matching_password\\\" >\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-md-8 control-label\\\" for=\\\"passwd\\\">Password</label>\\n                <input class=\\\"form-control\\\" required type=\\\"password\\\" ngControl=\\\"password\\\" id=\\\"passwd\\\" placeholder=\\\"Your password\\\" />\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"rPasswd\\\" class=\\\"col-md-8 control-label\\\">Password Confirmation</label>\\n                <input class=\\\"form-control\\\" required type=\\\"password\\\" ngControl=\\\"confirm\\\" id=\\\"rPasswd\\\" placeholder=\\\"Password Confirmation\\\" />\\n                <div *ngIf=\\\"passwordGroup.touched && !passwordGroup.valid\\\">\\n                    <p *ngIf=\\\"passwordGroup.touched && !passwordGroup.valid\\\">Passwords must match.</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group required\\\">\\n            <label for=\\\"phone\\\" class=\\\"col-md-8 control-label\\\">Phone</label>\\n            <input type=\\\"text\\\" ngControl=\\\"phone\\\" class=\\\"form-control\\\" id=\\\"phone\\\" name=\\\"phone\\\" required=\\\"required\\\" placeholder=\\\"phone number\\\">\\n        </div>\\n\\n        <button type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-default glab-btn\\\">Submit</button>\\n        <div class=\\\"form-group account-options\\\">\\n            <a href=\\\"#\\\" class=\\\"login-btn\\\" [routerLink]=\\\"['Login']\\\">Back to <strong>login</strong>?</a>\\n        </div>\\n        <!--<p>{{registerForm.value|json}}</p>-->\\n    </form>\\n    <!--TODO Remove this later: {{formStatus}}-->\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/components/register/register.html\n ** module id = 422\n ** module chunks = 1\n **/","import {Component, OnInit} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router, OnActivate, OnDeactivate, ComponentInstruction} from 'angular2/router';\n// load form related functionality\nimport {FormBuilder, Validators, Control, ControlGroup, FORM_DIRECTIVES, AbstractControl}    from 'angular2/common';\nimport { EmailValidator } from '../../validators/email.validator.ts';\nimport { PasswordValidator } from '../../validators/password.validator.ts';\n\nimport {User} from '../../services/user.service';\nimport {AuthService} from '../../services/auth.service';\n\n// import * as TweenMax from 'gsap';\n// load tweenmax\ndeclare var gsap: any;\ndeclare var $: any;\n\n@Component({\n    selector: 'register',\n    template: require('./register.html'),\n    directives: [ROUTER_DIRECTIVES, FORM_DIRECTIVES]\n})\n\nexport class Register implements OnInit, OnActivate, OnDeactivate {\n    \n    // for related variables\n    // payLoad = null;\n    registerForm: ControlGroup;\n    passwordGroup: any;\n    // matchPass: any;\n    // fields\n    email: Control;\n    asyncEmail: Control;\n\n    constructor(\n        private _router: Router,\n        private authService: AuthService,\n        private fb: FormBuilder\n    ) {\n        this.authService.registerError='';\n        this.email = new Control('', Validators.compose([Validators.required, EmailValidator.validEmail]), EmailValidator.emailAlreadyExist);\n        this.registerForm = fb.group({\n            firstName: new Control('', Validators.required),\n            \"lastName\": new Control('', Validators.required),\n            matching_password: fb.group({\n                password: ['', Validators.required],\n                confirm: ['', Validators.required]\n            }, { validator: PasswordValidator.matchPassword }),\n            \"email\": this.email,\n            \"phone\": ['', Validators.required]\n        });\n        // console.log(this.matching_password.errors);\n        // expose easy access to passworGroup to html\n        this.passwordGroup = (<ControlGroup>this.registerForm.controls['matching_password']);\n    }\n\n\n\n    get formStatus() {\n        return JSON.stringify(this.registerForm.value);\n    }\n\n\n    doRegister() {\n        // this.payLoad = JSON.stringify(this.registerForm.errors);\n        this.authService.doRegister(this.registerForm.value);\n    }\n\n    ngOnInit() {\n        if (this.authService.isAuthenticated()) {\n            return this._router.navigate(['Dashboard']);\n        }\n    }\n\n    routerOnActivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Register Page - initialized\");\n            gsap.fromTo($(\"#glab-register\"), .3, { scale: 0.3, opacity: 0 }, { scale: 1, opacity: 1 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 300));\n        }\n    }\n\n    routerOnDeactivate(next: ComponentInstruction, prev: ComponentInstruction) {\n        if (!this.authService.isAuthenticated()) {\n            console.log(\"Register Page - destroyed\");\n            gsap.fromTo($(\"#glab-register\"), .1, { scale: 1, opacity: 1 }, { scale: 0.3, opacity: 0 });\n            // return Rx.Observable.of(true).delay(1000).toPromise();\n            return new Promise((res, rej) => setTimeout(() => res(1), 100));\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/register/register.ts\n **/","import {Component} from 'angular2/core';\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\n\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'new-wait',\n    template: require('./new.html'),\n    directives: [ROUTER_DIRECTIVES],\n    providers: [AuthService]\n})\n\nexport class NewWait{\n    \n    constructor(\n\t\tprivate _router: Router,\n\t\tprivate _service: AuthService\n\t){}\n    \n    doLogin(){\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/components/wait/new.ts\n **/","import {Directive, Renderer, ElementRef, Self, forwardRef, Provider} from 'angular2/core';\n\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from 'angular2/common';\nimport {CONST_EXPR} from 'angular2/src/facade/lang';\n\nconst RADIO_VALUE_ACCESSOR = CONST_EXPR(new Provider(\n    NG_VALUE_ACCESSOR, {useExisting: forwardRef(() => RadioControlValueAccessor), multi: true}));\n\n/**\n * The accessor for writing a value and listening to changes on a radio input element.\n *\n *  ### Example\n *  ```\n *  <input type=\"radio\" ngModel=\"radioModel\">\n *  ```\n */\n@Directive({\n    selector:\n        'input[type=radio][ngControl],input[type=radio][ngFormControl],input[type=radio][ngModel]',\n    host: {'(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()'},\n    bindings: [RADIO_VALUE_ACCESSOR]\n})\n\nexport class RadioControlValueAccessor implements ControlValueAccessor {\n    onChange = (_) => {};\n    onTouched = () => {};\n\n    constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n    writeValue(value: any): void {\n        this._renderer.setElementProperty(this._elementRef, 'checked', value == this._elementRef.nativeElement.value);\n    }\n    registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n    registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/directives/radio_value_accessor.ts\n **/","export class LoginForm{\n    \n    constructor(\n    public email: string,\n    public password: string\n    ){\n        \n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/forms/login.form.ts\n **/","import {Injectable} from \"angular2/core\";\nimport {Http} from 'angular2/http';\n\n@Injectable()\nexport class AppService {\n    private nav:any = {};\n    \n    constructor(private http:Http) {\n        this.nav = {title: 'Please Login First To Book Appointment'}\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/app.service.ts\n **/","import {Injectable, Inject, EventEmitter} from \"angular2/core\";\nimport {CookieService} from './cookie.service';\nimport {Http, Headers} from 'angular2/http'\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\nimport {AuthService} from './auth.service';\n\n@Injectable()\nexport class AppointmentService {\n\n    services: Array<any>;\n    practitioners: Array<any>;\n    slots: Array<any>;\n    reminders: Array<any>;\n    loading: string;\n    errorMsg: string;\n    successMsg: string;\n    \n    constructor(private router: Router, private http: Http, private _auth: AuthService) {\n        this.loading = '';\n        this.services = [{ name: 'Acupuncture', id: 1 }, { id: 2, name: 'Bio-Meridian' }];\n        this.reminders = ['Email', 'Phone'];\n    }\n\n    fetchPractitioners(service: number) {\n        this.loading = 'practitioners';\n         let options = { \"headers\": new Headers({ \n            \"Authorization\": \"Bearer \" + this._auth.getToken(),\n            \"Content-Type\": \"application/json\"  \n        }) };\n        \n        // this.practitioners = [{ name: 'Kevin fojfer', id: 1 }, { id: 2, name: 'Rebecca Risk' }];\n        this.http.get(\"/api/practitioners\", options)\n        .subscribe((rep, err) => {\n                if (err) {\n                    console.log(\"Error : \", err);\n                    throw err;\n                }\n                console.log(\"Answer is : \", rep);\n                var response = rep.json();\n                if (response.success) {\n                    this.practitioners = response.message;\n                }\n                this.loading = '';  \n            });\n        \n    }\n\n    fetchSlots(date: string) {\n        this.slots = ['10:00AM', '10:30AM', '11:00AM'];\n    }\n    \n    doAppointment(apptFormData){\n        // clear the messages\n        this.errorMsg = '';\n        this.successMsg = '';\n        \n        // prepare the request params\n        let body = JSON.stringify(apptFormData);\n        let options = { \"headers\": new Headers({ \n            \"Authorization\": \"Bearer \" + this._auth.getToken(),\n            \"Content-Type\": \"application/json\"  \n        }) };\n        \n        \n        // submit the request\n        this.http.post(\"/api/appt/save\", body, options)\n            .subscribe((rep, err) => {\n                if (err) {\n                    console.log(\"Error : \", err);\n                    throw err;\n                }\n                console.log(\"Answer is : \", rep);\n                var response = rep.json();\n                if (response.success) {\n                    this.successMsg = response.message;\n                } else {\n                    this.errorMsg = response.message;\n                }\n            });\n    }\n \n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/appointment.service.ts\n **/","import {Injectable, Inject, EventEmitter} from \"angular2/core\";\nimport {WindowService} from './window.service';\nimport {CookieService} from './cookie.service';\nimport {Http, Headers} from 'angular2/http'\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\n\n@Injectable()\nexport class AuthService {\n\n    private authenticated: boolean = false;\n    private token: string;\n    private expires: any = 0;\n    private tokenCookieName: string = 'glab-tkn';\n    jwt: string = \"\";\n    loginError: string = \"\";\n    registerError: string = \"\";\n    successMsg: string = \"\";\n\n    constructor(private router: Router, private cookies: CookieService, private http: Http) {\n        console.log(\"called auth service with \" + this.authenticated);\n        this.jwt = this.getToken();\n    }\n\n    // Login and save the returned jason-web-token\n    public doLogin(user: string, password: string) {\n        // clear the messages\n        this.loginError = '';\n        this.jwt = \"\"; // erase first, so if error is thrown, user is logged out.\n        \n        // prepare the params for request\n        let body = JSON.stringify({ \"user\": user, \"password\": password });\n        let options = { \"headers\": new Headers({ \"Content-Type\": \"application/json\" }) };\n        \n        // send the request \n        this.http.post(\"/jwt\", body, options)\n            .subscribe((rep, err) => {\n                if (err) {\n                    console.log(\"Error : \", err);\n                    throw err;\n                }\n                console.log(\"Answer is : \", rep);\n                var response = rep.json();\n                if (response.success) {\n                    this.cookies.setCookie(this.tokenCookieName, response.message, '/', '');\n                    if (this.cookies.getCookie(this.tokenCookieName)) {\n                        this.jwt = response.message;\n                        this.authenticated = true;\n                        this.router.navigate(['Dashboard']);\n                    }\n                } else {\n                    this.jwt = \"\";\n                    this.loginError = response.message;\n                }\n            });\n\n    }\n    \n    // Registration\n    public doRegister(registerFormData) {\n        // clear the messages\n        this.registerError = '';\n        this.successMsg = '';\n        \n        // prepare the request params\n        let body = JSON.stringify(registerFormData);\n        let options = { \"headers\": new Headers({ \"Content-Type\": \"application/json\" }) };\n        \n        // submit the request\n        this.http.post(\"/register\", body, options)\n            .subscribe((rep, err) => {\n                if (err) {\n                    console.log(\"Error : \", err);\n                    throw err;\n                }\n                console.log(\"Answer is : \", rep);\n                var response = rep.json();\n                if (response.success) {\n                    this.successMsg = response.message;\n                } else {\n                    this.registerError = response.message;\n                }\n            });\n    }\n\n    private clearCookie() {\n        this.cookies.removeCookie(this.tokenCookieName);\n    }\n\n    public doLogout() {\n        this.clearCookie();\n    }\n\n    public isAuthenticated() {\n        return this.cookies.getCookie(this.tokenCookieName);\n    }\n    \n    public getToken(){\n        return this.cookies.getCookie(this.tokenCookieName);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/auth.service.ts\n **/","import {Injectable} from \"angular2/core\";\n\ndeclare var Cookies:any;\n\n@Injectable()\nexport class CookieService {\n    cookies:any = Cookies; // Cookies is a global scope object\n\n    constructor() {\n    }\n\n    getCookie(cookieName) {\n        return this.cookies.get(cookieName);\n    }\n\n    getAllCookies() {\n        return this.cookies.get();\n    }\n\n    setCookie(name:string, value:string, path:string = '/', domain:string, expiresInDays:number = 0) {\n        var options:any = {};\n        options.path = path;\n        if (domain) {\n            options.domain = domain;\n        }\n        if (expiresInDays > 0) {\n            options.expires = expiresInDays;\n        }\n\n        this.cookies.set(name, value, options);\n    }\n    \n    removeCookie(name:string){\n        this.cookies.remove(name);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/cookie.service.ts\n **/","import {Injectable, Inject, EventEmitter} from \"angular2/core\";\nimport {CookieService} from './cookie.service';\nimport {Http, Headers} from 'angular2/http'\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\nimport {AuthService} from './auth.service';\n\n@Injectable()\nexport class HistoryService {\n    appointments: Array<any>;\n    loading: string;\n    \n    constructor(private router: Router, private http: Http, private _auth: AuthService) {\n        this.loading = '';\n    }\n    \n    load(){\n        setTimeout(()=>{\n            this.appointments = [\n                {service: 'Acupuncture', practitioner: 'Rebecca Risk', date: '12-12-2016', time: '12:30pm', status: 'expired'},\n                {service: 'Acupuncture', practitioner: 'Rebecca Risk', date: '12-12-2016', time: '12:30pm', status: 'upcoming'}\n            ];\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/history.service.ts\n **/","import {Injectable, Inject, EventEmitter} from \"angular2/core\";\nimport {Http, Headers} from 'angular2/http'\nimport {ROUTER_DIRECTIVES, Router} from 'angular2/router';\nimport {AuthService} from './auth.service';\n\n@Injectable()\nexport class ProfileService {\n\n\n    constructor(private router: Router, private http: Http, private _auth: AuthService) {\n        console.log('instantiation');\n    }\n\n    // Login and save the returned jason-web-token\n    public fetch(user?: string) {\n        if(!user) { user = 'bearer'; }\n        // prepare the params for request\n        let options = { \"headers\": new Headers({ \n            \"Authorization\": \"Bearer \" + this._auth.getToken(),\n            \"Content-Type\": \"application/json\"  \n        }) };\n       \n        // send the request \n        return this.http.get(\"/api/profile/\"+user,  options);\n\n    }\n    \n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/profile.service.ts\n **/","import {Injectable} from \"angular2/core\";\n\n@Injectable()\nexport class WindowService {\n    constructor() {\n\n    }\n\n    createWindow(url:string, name:string='Window', width:number=500, height:number=600, left:number=0, top:number=0) {\n        if (url == null) {\n            return null;\n        }\n\n        var options = `width=${width},height=${height},left=${left},top=${top}`;\n\n        // console.log(\"Window options: \", options);\n        return window.open(url, name, options);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/services/window.service.ts\n **/","import { Control } from \"angular2/common\";\n\ninterface ValidationResult{\n   [key:string]:boolean;\n}\n\nexport class EmailValidator{\n    \n    static validEmail(control:Control): ValidationResult{\n         var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\n         if (!EMAIL_REGEXP.test(control.value)) {\n             return { 'validEmail': true };\n         }\n    }\n    \n    static emailAlreadyExist(control: Control): Promise<ValidationResult>{\n        return new Promise((resolve, reject) => {\n            \n            setTimeout(() => {\n                if (control.value === \"some@gmail.com\") {\n                    resolve({\"emailAlreadyExist\": true})\n                } else {\n                    resolve(null);\n                };\n                \n            }, 1000);\n        });\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/validators/email.validator.ts\n **/","import { Control, ControlGroup } from \"angular2/common\";\n\n\nexport class PasswordValidator{\n    \n    static matchPassword(group): any {\n        let password = (<Control>group.controls['password']);\n        let confirm = (<Control>group.controls['confirm']);\n        // console.log(\"pre call\");\n        // Don't kick in until user touches both fields   \n        if (password.pristine || confirm.pristine) {\n            return null;\n        }\n\n        // Mark group as touched so we can add invalid class easily\n        group.markAsTouched();\n        console.log(password.value, ' and ', confirm.value);\n        if (password.value === confirm.value) {\n            return null;\n        }\n        // console.log(\"calling\");\n        return {\n            isValid: true\n        };\n    }\n    \n}\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/app/validators/password.validator.ts\n **/","/*\n * Providers provided by Angular\n */\nimport {provide} from 'angular2/core';\nimport {bootstrap, ELEMENT_PROBE_PROVIDERS} from 'angular2/platform/browser';\nimport {ROUTER_PROVIDERS, LocationStrategy, HashLocationStrategy, ROUTER_DIRECTIVES} from 'angular2/router';\nimport {HTTP_PROVIDERS} from 'angular2/http';\nimport {COMMON_DIRECTIVES} from 'angular2/common';\n/*\n * App Component\n * our top level component that holds all of our components\n */\nimport {App} from './app/app';\nimport {WindowService} from './app/services/window.service';\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\ndocument.addEventListener('DOMContentLoaded', function main() {\n  bootstrap(App, [\n    ...('production' === process.env.ENV ? [] : ELEMENT_PROBE_PROVIDERS),\n    ...HTTP_PROVIDERS,\n    ...ROUTER_PROVIDERS,\n    ...COMMON_DIRECTIVES,\n    ...ROUTER_DIRECTIVES,\n    WindowService,\n    provide(LocationStrategy, { useClass: HashLocationStrategy })\n  ])\n  .catch(err => console.error(err));\n});\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./src/main.ts\n **/"],"sourceRoot":""}